 
/*********************************************************************************************************************/
 
tableroMousDayNeIns
 
/*********************************************************************************************************************/
 
CREATE PROCEDURE P_TABLERO_MOUS_DAY_NE_INS (P_FECHA_DESDE IN CHAR, P_FECHA_HASTA IN CHAR) IS
 
-- Autor: Mario Heredia.
-- Actualizacion: Mario Heredia. Fecha: Jan 27  2011. Motivo: tablero_mous_da2.sql
-- Actualizacion: Mario Heredia. Fecha: 04.12.2014. Motivo: Migracion e Implementacion de Procedure.
 
--------------------------------------------------------------------------------------------------------------------------------
-- Tabla: Tablero Mous Day.
-- Elemento de Red: Zona.
--------------------------------------------------------------------------------------------------------------------------------
 
CURSOR CUR_TAB_MOUS_ZONA_DAY (FECHA_DESDE VARCHAR2, FECHA_HASTA VARCHAR2) IS
SELECT FECHA,
       ALM.ZONA                           ELEMENT_NAME,
       'ZONA'                             ELEMENT_CLASS,
       SUM(MOUS)                          TCH_MOUS,
       SUM(TRAFFIC_DL_GPRS)               TRAFFIC_DL_GPRS,
       SUM(TRAFFIC_UL_GPRS)               TRAFFIC_UL_GPRS,
       SUM(TRAFFIC_GPRS)                  TRAFFIC_GPRS,
       SUM(TRAFFIC_DL_EDGE)               TRAFFIC_DL_EDGE,
       SUM(TRAFFIC_UL_EDGE)               TRAFFIC_UL_EDGE,
       SUM(TRAFFIC_EDGE)                  TRAFFIC_EDGE,
       SUM(SHORT_MESSAGE_MO)              SHORT_MESSAGE_MO,
       SUM(SHORT_MESSAGE_MT)              SHORT_MESSAGE_MT,
       SUM(CURRENT_SUBSCRIBERS_IN_VLR)    CURRENT_SUBSCRIBERS_IN_VLR,
       SUM(TOT_SUBS_LAC_GSM)              TOT_SUBS_LAC_GSM,
       SUM(TOT_SUBS_LAC_UMTS)             TOT_SUBS_LAC_UMTS,
       SUM(UMTS_MOUS_VOZ)                 MOUS_VOZ,
       SUM(UMTS_MOUS_VIDEOCALL)           MOUS_VIDEOCALL,
       SUM(HSDPA_DATA_DL_MBYTES)          HSDPA_MACD_MBYTES,
       SUM(HSUPA_DATA_MBYTES)             HSUPA_MACD_MBYTES,
       SUM(UMTS_PS_DATA_DL_MBYTES)        DL_R99_MACD_MBYTES,
       SUM(UMTS_PS_DATA_UL_MBYTES)        UL_R99_MACD_MBYTES
  FROM TABLERO_MOUS_DAY A,
       (SELECT MERCADO, ZONA FROM ALM_MERCADO GROUP BY MERCADO, ZONA) ALM
WHERE A.REGION = 'MERCADO'
   AND ALM.MERCADO = A.MERCADO
   AND FECHA BETWEEN TO_DATE(FECHA_DESDE, 'DD.MM.YYYY')
                 AND TO_DATE(FECHA_DESDE, 'DD.MM.YYYY')
   AND ALM.ZONA IS NOT NULL
GROUP BY FECHA,
          ALM.ZONA
ORDER BY FECHA,
          ALM.ZONA;
 
TYPE TYP_TAB_MOUS_ZONA_DAY IS TABLE OF CUR_TAB_MOUS_ZONA_DAY%ROWTYPE;
TAB_MOUS_ZONA_DAY TYP_TAB_MOUS_ZONA_DAY;
 
--------------------------------------------------------------------------------------------------------------------------------
-- Tabla: Tablero Mous Day.
-- Elemento de Red: Pais.
--------------------------------------------------------------------------------------------------------------------------------
 
CURSOR CUR_TAB_MOUS_PAIS_DAY (FECHA_DESDE VARCHAR2, FECHA_HASTA VARCHAR2) IS
SELECT FECHA,
       ALM.PAIS                           ELEMENT_NAME,
       'PAIS'                             ELEMENT_CLASS,
       SUM(MOUS)                          TCH_MOUS,
       SUM(TRAFFIC_DL_GPRS)               TRAFFIC_DL_GPRS,
       SUM(TRAFFIC_UL_GPRS)               TRAFFIC_UL_GPRS,
       SUM(TRAFFIC_GPRS)                  TRAFFIC_GPRS,
       SUM(TRAFFIC_DL_EDGE)               TRAFFIC_DL_EDGE,
       SUM(TRAFFIC_UL_EDGE)               TRAFFIC_UL_EDGE,
       SUM(TRAFFIC_EDGE)                  TRAFFIC_EDGE,
       SUM(SHORT_MESSAGE_MO)              SHORT_MESSAGE_MO,
       SUM(SHORT_MESSAGE_MT)              SHORT_MESSAGE_MT,
       SUM(CURRENT_SUBSCRIBERS_IN_VLR)    CURRENT_SUBSCRIBERS_IN_VLR,
       SUM(TOT_SUBS_LAC_GSM)              TOT_SUBS_LAC_GSM,
       SUM(TOT_SUBS_LAC_UMTS)             TOT_SUBS_LAC_UMTS,
       SUM(UMTS_MOUS_VOZ)                 MOUS_VOZ,
       SUM(UMTS_MOUS_VIDEOCALL)           MOUS_VIDEOCALL,
       SUM(HSDPA_DATA_DL_MBYTES)          HSDPA_MACD_MBYTES,
       SUM(HSUPA_DATA_MBYTES)             HSUPA_MACD_MBYTES,
       SUM(UMTS_PS_DATA_DL_MBYTES)        DL_R99_MACD_MBYTES,
       SUM(UMTS_PS_DATA_UL_MBYTES)        UL_R99_MACD_MBYTES
  FROM TABLERO_MOUS_DAY A,
       (SELECT MERCADO, PAIS FROM ALM_MERCADO GROUP BY MERCADO, PAIS) ALM
WHERE A.REGION = 'MERCADO'
   AND ALM.MERCADO = A.MERCADO
   AND FECHA BETWEEN TO_DATE(FECHA_DESDE, 'DD.MM.YYYY')
                 AND TO_DATE(FECHA_DESDE, 'DD.MM.YYYY')
GROUP BY FECHA,
          ALM.PAIS
ORDER BY FECHA,
          ALM.PAIS;
 
TYPE TYP_TAB_MOUS_PAIS_DAY IS TABLE OF CUR_TAB_MOUS_PAIS_DAY%ROWTYPE;
TAB_MOUS_PAIS_DAY TYP_TAB_MOUS_PAIS_DAY;
 
TYPE TYPE_ELEMENT_LIST IS TABLE OF VARCHAR2(20);
ZONALIST TYPE_ELEMENT_LIST := TYPE_ELEMENT_LIST();
PAISLIST TYPE_ELEMENT_LIST := TYPE_ELEMENT_LIST();
 
TYPE TYPE_ELEMENT_DATE IS TABLE OF DATE;
ZONADATE TYPE_ELEMENT_DATE := TYPE_ELEMENT_DATE();
PAISDATE TYPE_ELEMENT_DATE := TYPE_ELEMENT_DATE();
 
--------------------------------------------------------------------------------------------------------------------------------
-- Type Tabla = 'Tablero Mous Day'
--------------------------------------------------------------------------------------------------------------------------------
 
TYPE TYP_TAB_MOUS_DAY IS TABLE OF TABLERO_MOUS_DAY%ROWTYPE INDEX BY PLS_INTEGER;
TAB_MOUS_DAY TYP_TAB_MOUS_DAY;
 
C_LIMIT PLS_INTEGER := 100;
 
CNT  NUMBER := 0;
PCNT NUMBER := 0;
 
VLES T_TYPE_SPARE_DATE;
 
BEGIN
 
VLES := F_MDT_DAILY_EQUAL (TO_DATE(P_FECHA_DESDE, 'DD.MM.YYYY'), TO_DATE(P_FECHA_HASTA, 'DD.MM.YYYY'));
 
FOR I IN 1 .. VLES.COUNT LOOP
 
  -- Tratamiento
 
  -- Zona
  OPEN CUR_TAB_MOUS_ZONA_DAY (VLES(I).SPARE_01_CHR, VLES(I).SPARE_01_CHR);
 
  LOOP
 
  FETCH CUR_TAB_MOUS_ZONA_DAY BULK COLLECT INTO TAB_MOUS_ZONA_DAY LIMIT C_LIMIT;
 
  FOR I IN 1 .. TAB_MOUS_ZONA_DAY.COUNT LOOP
 
  CNT  :=  CNT + 1;
  PCNT := PCNT + 1;
 
  ZONADATE.EXTEND;
  ZONADATE(ZONADATE.LAST)                    := TAB_MOUS_ZONA_DAY(I).FECHA               ;
  ZONALIST.EXTEND;
  ZONALIST(ZONALIST.LAST)                    := TRIM(TAB_MOUS_ZONA_DAY(I).ELEMENT_NAME)  ;
 
  TAB_MOUS_DAY(I).FECHA                      := TAB_MOUS_ZONA_DAY(I).FECHA               ;
  TAB_MOUS_DAY(I).MERCADO                    := TRIM(TAB_MOUS_ZONA_DAY(I).ELEMENT_NAME)  ;
  TAB_MOUS_DAY(I).REGION                     := TRIM(TAB_MOUS_ZONA_DAY(I).ELEMENT_CLASS) ;
 
  TAB_MOUS_DAY(I).MOUS                       := TAB_MOUS_ZONA_DAY(I).TCH_MOUS            ;
 
  TAB_MOUS_DAY(I).TRAFFIC_GPRS               := TAB_MOUS_ZONA_DAY(I).TRAFFIC_GPRS        ;
  TAB_MOUS_DAY(I).TRAFFIC_DL_GPRS            := TAB_MOUS_ZONA_DAY(I).TRAFFIC_DL_GPRS     ;
  TAB_MOUS_DAY(I).TRAFFIC_UL_GPRS            := TAB_MOUS_ZONA_DAY(I).TRAFFIC_UL_GPRS     ;
  TAB_MOUS_DAY(I).TRAFFIC_EDGE               := TAB_MOUS_ZONA_DAY(I).TRAFFIC_EDGE        ;
  TAB_MOUS_DAY(I).TRAFFIC_DL_EDGE            := TAB_MOUS_ZONA_DAY(I).TRAFFIC_DL_EDGE     ;
  TAB_MOUS_DAY(I).TRAFFIC_UL_EDGE            := TAB_MOUS_ZONA_DAY(I).TRAFFIC_UL_EDGE     ;
 
  TAB_MOUS_DAY(I).SHORT_MESSAGE_MO           := TAB_MOUS_ZONA_DAY(I).SHORT_MESSAGE_MO    ;
  TAB_MOUS_DAY(I).SHORT_MESSAGE_MT           := TAB_MOUS_ZONA_DAY(I).SHORT_MESSAGE_MT    ;
 
  TAB_MOUS_DAY(I).UMTS_MOUS_VOZ              := TAB_MOUS_ZONA_DAY(I).MOUS_VOZ            ;
  TAB_MOUS_DAY(I).UMTS_MOUS_VIDEOCALL        := TAB_MOUS_ZONA_DAY(I).MOUS_VIDEOCALL      ;
 
  TAB_MOUS_DAY(I).HSDPA_DATA_DL_MBYTES       := TAB_MOUS_ZONA_DAY(I).HSDPA_MACD_MBYTES   ;
  TAB_MOUS_DAY(I).HSUPA_DATA_MBYTES          := TAB_MOUS_ZONA_DAY(I).HSUPA_MACD_MBYTES   ;
  TAB_MOUS_DAY(I).UMTS_PS_DATA_DL_MBYTES     := TAB_MOUS_ZONA_DAY(I).DL_R99_MACD_MBYTES  ;
  TAB_MOUS_DAY(I).UMTS_PS_DATA_UL_MBYTES     := TAB_MOUS_ZONA_DAY(I).UL_R99_MACD_MBYTES  ;
 
  TAB_MOUS_DAY(I).TOT_SUBS_LAC_GSM           := TAB_MOUS_ZONA_DAY(I).TOT_SUBS_LAC_GSM    ;
  TAB_MOUS_DAY(I).TOT_SUBS_LAC_UMTS          := TAB_MOUS_ZONA_DAY(I).TOT_SUBS_LAC_UMTS   ;
 
  TAB_MOUS_DAY(I).CURRENT_SUBSCRIBERS_IN_VLR := TAB_MOUS_ZONA_DAY(I).TOT_SUBS_LAC_GSM    +
                                                TAB_MOUS_ZONA_DAY(I).TOT_SUBS_LAC_UMTS   ;
 
  END LOOP;
 
  --DBMS_OUTPUT.PUT_LINE(PCNT||' '||CNT);
 
  IF CUR_TAB_MOUS_ZONA_DAY%NOTFOUND THEN
 
     FORALL I IN ZONALIST.FIRST .. PCNT
     DELETE FROM TABLERO_MOUS_DAY WHERE MERCADO = ZONALIST(I) AND FECHA = ZONADATE(I) AND REGION = 'ZONA';
 
     FORALL I IN TAB_MOUS_DAY.FIRST .. PCNT
     INSERT INTO TABLERO_MOUS_DAY VALUES TAB_MOUS_DAY(I);
 
     PCNT := 0;
     ZONALIST.DELETE;
     ZONADATE.DELETE;
 
     EXIT;
 
  ELSE
 
     FORALL I IN ZONALIST.FIRST .. ZONALIST.LAST
     DELETE FROM TABLERO_MOUS_DAY WHERE MERCADO = ZONALIST(I) AND FECHA = ZONADATE(I) AND REGION = 'ZONA';
 
     FORALL I IN TAB_MOUS_DAY.FIRST .. TAB_MOUS_DAY.LAST
     INSERT INTO TABLERO_MOUS_DAY VALUES TAB_MOUS_DAY(I);
 
  END IF;
 
  PCNT := 0;
  ZONALIST.DELETE;
  ZONADATE.DELETE;
 
  END LOOP;
 
  CLOSE CUR_TAB_MOUS_ZONA_DAY;
 
  -- Pais
  OPEN CUR_TAB_MOUS_PAIS_DAY (VLES(I).SPARE_01_CHR, VLES(I).SPARE_01_CHR);
 
  LOOP
 
  FETCH CUR_TAB_MOUS_PAIS_DAY BULK COLLECT INTO TAB_MOUS_PAIS_DAY LIMIT C_LIMIT;
 
  FOR I IN 1 .. TAB_MOUS_PAIS_DAY.COUNT LOOP
 
  CNT  :=  CNT + 1;
  PCNT := PCNT + 1;
 
  PAISDATE.EXTEND;
  PAISDATE(PAISDATE.LAST)                    := TAB_MOUS_PAIS_DAY(I).FECHA               ;
  PAISLIST.EXTEND;
  PAISLIST(PAISLIST.LAST)                    := TRIM(TAB_MOUS_PAIS_DAY(I).ELEMENT_NAME)  ;
 
  TAB_MOUS_DAY(I).FECHA                      := TAB_MOUS_PAIS_DAY(I).FECHA               ;
  TAB_MOUS_DAY(I).MERCADO                    := TRIM(TAB_MOUS_PAIS_DAY(I).ELEMENT_NAME)  ;
  TAB_MOUS_DAY(I).REGION                     := TRIM(TAB_MOUS_PAIS_DAY(I).ELEMENT_CLASS) ;
 
  TAB_MOUS_DAY(I).MOUS                       := TAB_MOUS_PAIS_DAY(I).TCH_MOUS            ;
 
  TAB_MOUS_DAY(I).TRAFFIC_GPRS               := TAB_MOUS_PAIS_DAY(I).TRAFFIC_GPRS        ;
  TAB_MOUS_DAY(I).TRAFFIC_DL_GPRS            := TAB_MOUS_PAIS_DAY(I).TRAFFIC_DL_GPRS     ;
  TAB_MOUS_DAY(I).TRAFFIC_UL_GPRS            := TAB_MOUS_PAIS_DAY(I).TRAFFIC_UL_GPRS     ;
  TAB_MOUS_DAY(I).TRAFFIC_EDGE               := TAB_MOUS_PAIS_DAY(I).TRAFFIC_EDGE        ;
  TAB_MOUS_DAY(I).TRAFFIC_DL_EDGE            := TAB_MOUS_PAIS_DAY(I).TRAFFIC_DL_EDGE     ;
  TAB_MOUS_DAY(I).TRAFFIC_UL_EDGE            := TAB_MOUS_PAIS_DAY(I).TRAFFIC_UL_EDGE     ;
 
  TAB_MOUS_DAY(I).SHORT_MESSAGE_MO           := TAB_MOUS_PAIS_DAY(I).SHORT_MESSAGE_MO    ;
  TAB_MOUS_DAY(I).SHORT_MESSAGE_MT           := TAB_MOUS_PAIS_DAY(I).SHORT_MESSAGE_MT    ;
 
  TAB_MOUS_DAY(I).UMTS_MOUS_VOZ              := TAB_MOUS_PAIS_DAY(I).MOUS_VOZ            ;
  TAB_MOUS_DAY(I).UMTS_MOUS_VIDEOCALL        := TAB_MOUS_PAIS_DAY(I).MOUS_VIDEOCALL      ;
 
  TAB_MOUS_DAY(I).HSDPA_DATA_DL_MBYTES       := TAB_MOUS_PAIS_DAY(I).HSDPA_MACD_MBYTES   ;
  TAB_MOUS_DAY(I).HSUPA_DATA_MBYTES          := TAB_MOUS_PAIS_DAY(I).HSUPA_MACD_MBYTES   ;
  TAB_MOUS_DAY(I).UMTS_PS_DATA_DL_MBYTES     := TAB_MOUS_PAIS_DAY(I).DL_R99_MACD_MBYTES  ;
  TAB_MOUS_DAY(I).UMTS_PS_DATA_UL_MBYTES     := TAB_MOUS_PAIS_DAY(I).UL_R99_MACD_MBYTES  ;
 
  TAB_MOUS_DAY(I).TOT_SUBS_LAC_GSM           := TAB_MOUS_PAIS_DAY(I).TOT_SUBS_LAC_GSM    ;
  TAB_MOUS_DAY(I).TOT_SUBS_LAC_UMTS          := TAB_MOUS_PAIS_DAY(I).TOT_SUBS_LAC_UMTS   ;
 
  TAB_MOUS_DAY(I).CURRENT_SUBSCRIBERS_IN_VLR := TAB_MOUS_PAIS_DAY(I).TOT_SUBS_LAC_GSM    +
                                                TAB_MOUS_PAIS_DAY(I).TOT_SUBS_LAC_UMTS   ;
 
  END LOOP;
 
  --DBMS_OUTPUT.PUT_LINE(PCNT||' '||CNT);
 
  IF CUR_TAB_MOUS_PAIS_DAY%NOTFOUND THEN
 
     FORALL I IN PAISLIST.FIRST .. PCNT
     DELETE FROM TABLERO_MOUS_DAY WHERE MERCADO = PAISLIST(I) AND FECHA = PAISDATE(I) AND REGION = 'PAIS';
 
     FORALL I IN TAB_MOUS_DAY.FIRST .. PCNT
     INSERT INTO TABLERO_MOUS_DAY VALUES TAB_MOUS_DAY(I);
 
     PCNT := 0;
     PAISLIST.DELETE;
     PAISDATE.DELETE;
 
     EXIT;
 
  ELSE
 
     FORALL I IN PAISLIST.FIRST .. PAISLIST.LAST
     DELETE FROM TABLERO_MOUS_DAY WHERE MERCADO = PAISLIST(I) AND FECHA = PAISDATE(I) AND REGION = 'PAIS';
 
     FORALL I IN TAB_MOUS_DAY.FIRST .. TAB_MOUS_DAY.LAST
     INSERT INTO TABLERO_MOUS_DAY VALUES TAB_MOUS_DAY(I);
 
  END IF;
 
  PCNT := 0;
  PAISLIST.DELETE;
  PAISDATE.DELETE;
 
  END LOOP;
 
  CLOSE CUR_TAB_MOUS_PAIS_DAY;
 
END LOOP;
 
COMMIT;
 
END P_TABLERO_MOUS_DAY_NE_INS;